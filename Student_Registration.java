/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Student_Reg;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author DJ LOVE
 */
public class Student_Registration extends javax.swing.JFrame {

    /**
     * Creates new form Student_Registration
     */
    public Student_Registration() {
        initComponents();
        Studtable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblReg = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblMobile = new javax.swing.JLabel();
        lblCourse = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        txtCourse = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        StudentsTbl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Student Registration");

        lblReg.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblReg.setText("Registration");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblName.setText("Name");

        lblMobile.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMobile.setText("Mobile Number");

        lblCourse.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCourse.setText("Course");

        txtName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtMobile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtCourse.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnSave.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMobile)
                            .addComponent(txtName)
                            .addComponent(txtCourse))
                        .addGap(32, 32, 32))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(btnDelete)
                        .addGap(22, 22, 22))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete))
                .addGap(18, 18, 18))
        );

        StudentsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Mobile Number", "Course"
            }
        ));
        StudentsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StudentsTblMouseClicked(evt);
            }
        });
        StudentsTbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                StudentsTblKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(StudentsTbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblReg, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(579, 579, 579))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblReg, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
Connection con1;
    PreparedStatement ins;
    
        public String error_msg;
       // private  ResultSet Results;
        public  String DBdriverstring;
        public Integer con1_error_flag, db__error_flag;
       
        public void Studtable()
        {
            
            try {
                
                
                Class.forName("com.mysql.cj.jdbc.Driver") ;
            con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/student", "root", "");
            
            //  String connection="jdbc:mysql://localhost:3306; databaseName=student; user=root; password=";
            
            //con1 = DriverManager.getConnection(connection);
            
            
                            if (con1 == null){
            //      for_error.setText(conn.toString());
    //                   System.out.println("NULL");
            //      System.out.println(" NOT NULL");
                        error_msg = "CONNECTION FAILURE";
                        con1_error_flag = 1;
    //                    return null;
                    }
                    else
                    {
                        error_msg = "CONNECTION SUCCESS";
                        con1_error_flag = 0;
    //                    return conn;
                    }
            
                
                
                ins=con1.prepareStatement("select * from students");
                ResultSet rs = ins.executeQuery();
                ResultSetMetaData RSM = rs.getMetaData();
                int c;
                c= RSM.getColumnCount();
                
                DefaultTableModel DF = (DefaultTableModel) StudentsTbl.getModel();
                
                DF.setRowCount(0);
                
                while(rs.next())
                
                {
                Vector v2 = new Vector();
                
                for(int i=1; i<c; i++)
                    
                {
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("name"));
                        v2.add(rs.getString("mobile_number"));
                        v2.add(rs.getString("course"));
                }
                    
                    DF.addRow(v2);
                    
                }  
                
                
                
            } 
            
            catch (ClassNotFoundException ex) {
                Logger.getLogger(Student_Registration.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            catch (SQLException ex) {
                Logger.getLogger(Student_Registration.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            
            
        }   
    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText();
        String mobile = txtMobile.getText();
        String course = txtCourse.getText();
        
        try
        {
            
            
           Class.forName("com.mysql.cj.jdbc.Driver") ;
           con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/student", "root", "");
           
         //  String connection="jdbc:mysql://localhost:3306; databaseName=student; user=root; password=";
           
           //con1 = DriverManager.getConnection(connection);
           
           
                           if (con1 == null){
          //      for_error.setText(conn.toString());
//                   System.out.println("NULL");
          //      System.out.println(" NOT NULL");
                    error_msg = "CONNECTION FAILURE";
                    con1_error_flag = 1;
//                    return null;
                }
                else
                {
                    error_msg = "CONNECTION SUCCESS"; 
                    con1_error_flag = 0;
//                    return conn;
                }
           
           
           ins = con1.prepareStatement("insert into students(name, mobile_number,course) values (?,?,?)");
           ins.setString(1, name);
           ins.setString(2, mobile);
           ins.setString(3, course);
           ins.executeUpdate();
           
           JOptionPane.showMessageDialog(this, "Recorded submitted successfully");
           
            txtName.setText("");
            txtMobile.setText("");
            txtCourse.setText("");
            txtName.requestFocus();
             Studtable();
            
        } 
        
        catch (ClassNotFoundException ex) {
            Logger.getLogger(Student_Registration.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
          catch (SQLException ex) {
            Logger.getLogger(Student_Registration.class.getName()).log(Level.SEVERE, null, ex);
        }      
    
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText();
        String mobile = txtMobile.getText();
        String course = txtCourse.getText();
        
        DefaultTableModel d1 = (DefaultTableModel)StudentsTbl.getModel();
        int SelectedIndex = StudentsTbl.getSelectedRow();
              
        String record_id = d1.getValueAt(StudentsTbl.getSelectedRow(), 0).toString();
        
        try
        {
            
            
           Class.forName("com.mysql.cj.jdbc.Driver") ;
           con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/student", "root", "");
           
         //  String connection="jdbc:mysql://localhost:3306; databaseName=student; user=root; password=";
           
           //con1 = DriverManager.getConnection(connection);
           
           
                           if (con1 == null){
          //      for_error.setText(conn.toString());
//                   System.out.println("NULL");
          //      System.out.println(" NOT NULL");
                    error_msg = "CONNECTION FAILURE";
                    con1_error_flag = 1;
//                    return null;
                }
                else
                {
                    error_msg = "CONNECTION SUCCESS";
                    con1_error_flag = 0;
//                    return conn;
                }
           
           
           ins = con1.prepareStatement("update students set name= ?, mobile_number= ?, course= ? where id= ?");
           ins.setString(1, name);
           ins.setString(2, mobile);
           ins.setString(3, course);
            ins.setString(4, record_id);
           ins.executeUpdate();
           
           JOptionPane.showMessageDialog(this, "Record updated successfully");
           
            txtName.setText("");
            txtMobile.setText("");
            txtCourse.setText("");
            txtName.requestFocus();
             Studtable();
            
        } 
        
        catch (ClassNotFoundException ex) {
            Logger.getLogger(Student_Registration.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
          catch (SQLException ex) {
            Logger.getLogger(Student_Registration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void StudentsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StudentsTblMouseClicked
        // TODO add your handling code here:
        DefaultTableModel d1 = (DefaultTableModel)StudentsTbl.getModel();
        int SelectedIndex = StudentsTbl.getSelectedRow();
        
        String record_id = d1.getValueAt(StudentsTbl.getSelectedRow(), 0).toString();
        
        txtName.setText(d1.getValueAt(StudentsTbl.getSelectedRow(), 1).toString());
        txtMobile.setText(d1.getValueAt(StudentsTbl.getSelectedRow(), 2).toString()); 
        txtCourse.setText(d1.getValueAt(StudentsTbl.getSelectedRow(), 3).toString());
        btnSave.setEnabled(false);
        btnEdit.setEnabled(true);
        
    }//GEN-LAST:event_StudentsTblMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel d1 = (DefaultTableModel)StudentsTbl.getModel();
        int SelectedIndex = StudentsTbl.getSelectedRow();
              
        String record_id = d1.getValueAt(StudentsTbl.getSelectedRow(), 0).toString();
        
        
        
        
        try
        {
           int dialog_result = JOptionPane.showConfirmDialog(null, "Do you want to delete this record?", "Warning", JOptionPane.YES_NO_OPTION);
           
           if(dialog_result == JOptionPane.YES_NO_OPTION )
               
           {
            
           Class.forName("com.mysql.cj.jdbc.Driver") ;
           con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/student", "root", "");
           
         //  String connection="jdbc:mysql://localhost:3306; databaseName=student; user=root; password=";
           
           //con1 = DriverManager.getConnection(connection);
           
           
                           if (con1 == null){
          //      for_error.setText(conn.toString());
//                   System.out.println("NULL");
          //      System.out.println(" NOT NULL");
                    error_msg = "CONNECTION FAILURE";
                    con1_error_flag = 1;
//                    return null;
                }
                else
                {
                    error_msg = "CONNECTION SUCCESS";
                    con1_error_flag = 0;
//                    return conn;
                }
           
           
           ins = con1.prepareStatement("Delete from students where id= ?");
            ins.setString(1, record_id);
           ins.executeUpdate();
           
           JOptionPane.showMessageDialog(this, "Recorded deleted successfully");
           
            txtName.setText("");
            txtMobile.setText("");
            txtCourse.setText("");
            txtName.requestFocus();
             Studtable();
             
           }  // Closes the If statement up there
             
            
        } 
        
        catch (ClassNotFoundException ex) {
            Logger.getLogger(Student_Registration.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
          catch (SQLException ex) {
            Logger.getLogger(Student_Registration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void StudentsTblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StudentsTblKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            
             DefaultTableModel d1 = (DefaultTableModel)StudentsTbl.getModel();
        int SelectedIndex = StudentsTbl.getSelectedRow();
        
        String record_id = d1.getValueAt(StudentsTbl.getSelectedRow(), 0).toString();
        
        txtName.setText(d1.getValueAt(StudentsTbl.getSelectedRow(), 1).toString());
        txtMobile.setText(d1.getValueAt(StudentsTbl.getSelectedRow(), 2).toString()); 
        txtCourse.setText(d1.getValueAt(StudentsTbl.getSelectedRow(), 3).toString());
        btnSave.setEnabled(false);
        btnEdit.setEnabled(true);
        }
    }//GEN-LAST:event_StudentsTblKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student_Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student_Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student_Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student_Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student_Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable StudentsTbl;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCourse;
    private javax.swing.JLabel lblMobile;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblReg;
    private javax.swing.JTextField txtCourse;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
